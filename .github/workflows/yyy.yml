name: 分离和上传双语字幕文件

on:
  workflow_dispatch:
    inputs:
      runSplit:
        description: "是否执行字幕分离任务 (true/false)"
        required: true
        default: "false"
        type: boolean
      srtFile:
        description: "输入的双语 SRT 文件路径（例如 deepseek.srt）"
        required: true
        default: "deepseek.srt"

jobs:
  split_upload:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.runSplit == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: 分离 SRT 文件
        id: split
        run: |
          set -e
          FILE_PATH="${{ github.event.inputs.srtFile }}"
          if [ ! -f "$FILE_PATH" ]; then
            echo "错误：文件 $FILE_PATH 不存在！"
            exit 1
          fi
          # 生成输出文件名
          BASE_NAME="${FILE_PATH%.srt}"
          FILE_A="${BASE_NAME}_A.srt"
          FILE_B="${BASE_NAME}_B.srt"
          
          echo "处理文件：$FILE_PATH"
          echo "输出文件：$FILE_A 和 $FILE_B"
          
          # 使用 AWK 逐行处理，按字幕块分离语言
          awk -v fileA="$FILE_A" -v fileB="$FILE_B" '
            function trim(str) { sub(/^[ \t\r\n]+/, "", str); sub(/[ \t\r\n]+$/, "", str); return str }
            function flushBlock() {
              if (block != "" && times != "") {
                split(text, lines, "\n")
                # 写入文件 A：字幕块编号、时间戳及第一行文本（通常为英文）
                print block > fileA
                print times > fileA
                print trim(lines[1]) > fileA
                print "" > fileA
                # 写入文件 B：字幕块编号、时间戳及第二行文本（通常为中文），如没有则复制第一行
                print block > fileB
                print times > fileB
                if (length(lines) >= 2)
                  print trim(lines[2]) > fileB
                else
                  print trim(lines[1]) > fileB
                print "" > fileB
              }
              block=""; times=""; text=""
            }
            # 若行只包含数字（可能带空白），则认为是块编号
            /^[0-9]+[[:space:]]*$/ { flushBlock(); block = trim($0); next }
            # 匹配时间戳行（例如 "00:00:00,160 --> 00:00:02,240"）
            /^[0-9]+:[0-9]+:[0-9]+,[0-9]+/ { times = trim($0); next }
            # 空行表示字幕块结束
            /^$/ { flushBlock(); next }
            # 其他行归入字幕文本
            {
              if (text != "")
                text = text "\n" $0
              else
                text = $0
            }
            END { flushBlock() }
          ' "$FILE_PATH"
          
          # 如生成的输出文件不存在，则创建空文件，确保后续 artifact 上传不会报错
          if [ ! -f "$FILE_A" ]; then
            echo "$FILE_A 未生成，创建空文件"
            touch "$FILE_A"
          fi
          if [ ! -f "$FILE_B" ]; then
            echo "$FILE_B 未生成，创建空文件"
            touch "$FILE_B"
          fi
          
          echo "字幕分离完成."
          echo "fileA=${FILE_A}" >> $GITHUB_OUTPUT
          echo "fileB=${FILE_B}" >> $GITHUB_OUTPUT

      - name: 显示当前目录文件列表（调试）
        run: ls -la
        
      - name: 上传分离后的字幕文件
        uses: actions/upload-artifact@v4
        with:
          name: separated-srt-files
          path: |
            ${{ steps.split.outputs.fileA }}
            ${{ steps.split.outputs.fileB }}
            
