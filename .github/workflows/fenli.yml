name: SRT Toolkit (Split, Merge & Separate Bilingual)

on:
  workflow_dispatch:
    inputs:
      srt_file:
        description: '主操作的SRT文件路径'
        required: false
        default: 'HUAWEI.srt'
      split_mode:
        description: '分割模式：by_block/by_parts/none'
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - by_block
          - by_parts
      split_block:
        description: '分割点（块编号，仅by_block有效）'
        required: false
        default: '150'
      parts:
        description: '分成几份，仅by_parts有效'
        required: false
        default: '2'
      merge_mode:
        description: '是否进行双语合并，none为不合并，en_top为英文在上，zh_top为中文在上'
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - en_top
          - zh_top
      srt_file_a:
        description: '双语合并时用于在上方的SRT文件路径'
        required: false
        default: ''
      srt_file_b:
        description: '双语合并时用于在下方的SRT文件路径'
        required: false
        default: ''
      separate_bilingual:
        description: '是否将双语SRT分离为两个单语SRT（none/yes）'
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - yes
      separate_input_file:
        description: '需要被分离的双语SRT文件路径'
        required: false
        default: ''

jobs:
  srt-toolkit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ...（前面分割、合并代码略，保持不变）...

      - name: 分离双语SRT为两个单语言SRT
        if: ${{ inputs.separate_bilingual == yes }}
        run: |
          set -e
          input_file="${{ github.event.inputs.separate_input_file }}"
          if [ -z "$input_file" ]; then
            echo "请提供需要被分离的双语SRT文件路径"
            exit 1
          fi
          output_a="${input_file}_A.srt"
          output_b="${input_file}_B.srt"
          rm -f "$output_a" "$output_b"
          awk '
            function trim(s) {
              sub(/^[ \t\r\n]+/, "", s);
              sub(/[ \t\r\n]+$/, "", s);
              return s
            }
            function flushblock() {
              if (blocknum && timestr) {
                split(text, arr, "\n")
                # Write to file A: block number, time, first line (if exists)
                print blocknum > a
                print timestr > a
                if (length(arr) >= 1) {
                  print trim(arr[1]) > a
                }
                print "" > a
                # Write to file B: block number, time, second line (if exists; else empty)
                print blocknum > b
                print timestr > b
                if (length(arr) >= 2) {
                  print trim(arr[2]) > b
                } else if (length(arr) >= 1) {
                  print "" > b
                }
                print "" > b
              }
              blocknum=""; timestr=""; text=""
            }
            BEGIN {
              a = "'$output_a'";
              b = "'$output_b'";
            }
            {
              line = trim($0)
              # If the line is a number then flush the previous block and start a new one.
              if (line ~ /^[0-9]+$/) {
                flushblock();
                blocknum = line;
                next
              }
              # Match the time string explicitly; e.g., "00:00:00,160 --> 00:00:02,240"
              if (line ~ /^[0-9]{2}:[0-9]{2}:[0-9]{2},[0-9]{3} --> [0-9]{2}:[0-9]{2}:[0-9]{2},[0-9]{3}$/) {
                timestr = line;
                next
              }
              # Blank lines trigger a flush
              if (line == "") {
                flushblock();
                next
              }
              # Otherwise, accumulate into text (with newline if text already exists)
              if (text != "")
                text = text "\n" line;
              else
                text = line;
            }
            END { flushblock() }
          ' "$input_file"
  
          # 检查分离结果
          if [[ ! -s "$output_a" || ! -s "$output_b" ]]; then
            echo "分离失败：未生成新文件或文件为空"
            ls -lh
            exit 1
          else
            echo "分离完成，输出文件：$output_a 和 $output_b"
            ls -lh "$output_a" "$output_b"
          fi
      
      - name: 显示当前目录文件列表（调试）
        run: ls -la

      - name: 上传分离后单语言SRT
        if: ${{ inputs.separate_bilingual == yes }}
        uses: actions/upload-artifact@v4
        with:
          name: separated-single-lang-srt
          path: |
            ${{ github.event.inputs.separate_input_file }}_A.srt
            ${{ github.event.inputs.separate_input_file }}_B.srt
